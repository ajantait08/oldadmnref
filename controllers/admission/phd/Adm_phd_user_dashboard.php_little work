<?php

class Adm_phd_user_dashboard extends MY_Controller
{

  function __construct()
  {
    parent::__construct();
    $this->load->helper('url');
    $this->load->helper('form');
    $this->load->library('session');
    $this->load->database();
    $this->load->helper('captcha');
    $this->load->library('encrypt');
    $this->load->library('zip');
    $this->load->library('email');
    $this->load->library('form_validation');
    $this->load->helper(array('form', 'url'));
    // $this->load->library('email1');
    $this->load->model('admission/phd/Add_phd_registration_model');
    $this->load->model('admission/phd/Adm_phd_application_model');
    $this->load->model('admission/phd/Adm_phd_personal_details_model');
  }

  function index()
  {
    $email = $this->session->userdata('email');
    $viewdata['name'] = $this->session->userdata('name');

    // echo $email."". print_r($viewdata);die;  // After clicking Apply then control is coming here.

    $get_reg_no = $this->Add_phd_registration_model->get_registration_no_by_email($email);
    // $data['gate_paper_code']=$this->Add_phd_registration_model->gate_paper_code();
    // $data['btech_paper']=$this->Add_phd_registration_model->get_programme_list_of_btech();

    // mdn($get_reg_no);

    $data['candidate_type'] = $this->Add_phd_registration_model->get_candidate_type_by_email($email);
    // mdn($data);

    $appl_ms = $this->Adm_phd_personal_details_model->get_Adm_phd_appl_ms($get_reg_no);
  
    // echo "<pre>";
    // print_r($appl_ms);
    // exit;
    // mdn($appl_ms);

    $appl_program = $this->Adm_phd_personal_details_model->get_Adm_phd_reg_appl_program($get_reg_no);
   

    if (empty($appl_ms)) {

      $data['val'] = "H";
      $this->Adm_phd_header($data);
      $this->load->view('admission/phd/adm_phd_apply', $viewdata);
      $this->Adm_phd_footer();
    } 
    else
    {
      $this->applications_track();
    }
  }

  public function applications_track()
  {
    $email = $this->session->userdata('email');
    $viewdata['name'] = $this->session->userdata('name');

    // echo $email." ";
    // mdn($viewdata);

    $get_reg_no = $this->Add_phd_registration_model->get_registration_no_by_email($email);
    $tab_status = $this->Adm_phd_personal_details_model->get_tab_status($get_reg_no);

    // mdn($tab_status);

    $tab = $this->Adm_phd_personal_details_model->check_tab($get_reg_no);
    $value = $tab[0]->highest;
    if (empty($tab_status)) {
      redirect('admission/phd/Adm_phd_user_dashboard/apply_post');
    } 
    else
    {
      if ($value == '1') 
      {
        $this->session->set_userdata('education', 'education');
        redirect('admission/phd/Adm_phd_personal_details');
      } elseif ($value == '2') {
        $this->session->set_userdata('work_experience', 'work_experience');
        redirect('admission/phd/Adm_phd_personal_details');
      } elseif ($value == '3') {
        $this->session->set_userdata('document', 'document');
        redirect('admission/phd/Adm_phd_document');
      } elseif ($value == '4') {
        $this->session->set_userdata('payment', 'payment');
        redirect('admission/phd/Adm_phd_payment');
      } else {
        $this->session->set_userdata('personal_details', 'personal_details');
        redirect('admission/phd/Adm_phd_personal_details');
      }
    }
  }

  public function education_apply_post() //for deleting temp file
  {

    $this->load->model('admission/phd/Add_phd_registration_model');
    $email = $this->session->userdata('email');
    $get_reg_no = $this->Add_phd_registration_model->get_registration_no_by_email($email);
    $row_id = trim($this->input->post('redirect_to_image_icon'));
    $prog_elligibilty = trim($this->input->post('redirect_to_image_icon2'));
    $programme_apply_for = trim($this->input->post('redirect_to_image_icon3'));
    $p_elig_desc = $this->Add_phd_registration_model->get_degree_desc_by_program_id($prog_elligibilty);
    $p_apply_f_desc = $this->Add_phd_registration_model->get_program_desc_by_program_id($programme_apply_for);
    $val = array(
      'id' => $row_id,
      'registration_no' => $get_reg_no,
    );
    $p_row_id = $this->Add_phd_registration_model->check_application_programme_details_row_id($get_reg_no, $programme_apply_for);
    if ($p_row_id == $row_id) {
      $ok = $this->Add_phd_registration_model->delete_applying_program($val);
      //  echo  $this->db->last_query();
      //  exit;
      if ($ok) {
        $this->session->set_flashdata('apply_success', 'Data delete succesfully');
        redirect('admission/phd//Adm_phd_user_dashboard/apply_post');
      } else {
        $this->session->set_flashdata('error', 'Something went wrong');
        redirect('admission/phd/Adm_phd_user_dashboard/apply_post');
      }
    } else {
      $this->session->set_flashdata('error', 'Data could not be deleted Something went wrong!');
      redirect('admission/phd/Adm_phd_user_dashboard/apply_post');
    }
  }

  public function submit()
  {
    $email = $this->session->userdata('email');
    $get_reg_details = $this->Add_phd_registration_model->get_registration_detail_by_email($email);
    $get_reg_no = $this->Add_phd_registration_model->get_registration_no_by_email($email);
    $appl_ms_prom = $this->Adm_phd_application_model->get_application_fill_details($get_reg_no);

    $sum_of_fee = 0;
    foreach ($appl_ms_prom as $key => $value) {
      $sum_of_fee = $value->fee_amount + $sum_of_fee;
    }
    // echo $sum_of_fee;
    // exit;
    $tab = array(
      'registration_no' => $get_reg_details[0]->registration_no,
      'created_by' => $email
    );
    $tabs = array(
      'prom_apply_status' => "program applied",
    );

    $fee = array(
      'application_fee' => $sum_of_fee,
    );

    $this->Add_phd_registration_model->update_fee_amount($fee, $get_reg_no);
    $this->Adm_phd_personal_details_model->update_tab1($tab, $get_reg_no);
    $this->Adm_phd_personal_details_model->update_tab1($tabs, $get_reg_no);
    $this->session->set_userdata('personal_details', 'personal_details');
    $this->session->set_userdata('finshed', 'apply_program_finshed');
    $this->session->set_flashdata('success', 'Please fill all the details');
    // $this->session->unset_userdata('applied');
    $this->session->set_userdata('applied', 'applied');
    redirect('admission/phd/Adm_phd_personal_details');
  }

  public function apply_post()
  {
    $viewdata['name'] = $this->session->userdata('name');
    $email = $this->session->userdata('email');
    $data['candidate_type'] = $this->Add_phd_registration_model->get_candidate_type_by_email($email);
    $get_reg_no = $this->Add_phd_registration_model->get_registration_no_by_email($email);
    $get_reg_details = $this->Add_phd_registration_model->get_registration_detail_by_email($email);
    // $data['gate_paper_code']=$this->Add_phd_registration_model->gate_paper_code(); 
    if (!empty($get_reg_details[0]->color_blind)) {
      if ($get_reg_details[0]->color_blind == 'Y') {
        $data['btech_paper'] = $this->Add_phd_registration_model->get_programme_list_of_btech_without_color_blind();
      } else {
        $data['btech_paper'] = $this->Add_phd_registration_model->get_programme_list_of_btech();
      }
    }  // mdn

    // echo $this->db->last_query();
    // echo "<pre>";
    // print_r($data['btech_paper']);
    // exit;

    $data['fill_appl_details'] = $this->Adm_phd_application_model->get_application_fill_details($get_reg_no);
    $data['val'] = "H";
    $data['remove_apply'] = 'apply_remove';
    // mdn($data);
    $this->Adm_phd_header($data);
    $this->load->view('admission/phd/adm_phd_apply_post', $data);
    $this->Adm_phd_footer();

  }

  public function apply_application()
  {
    $email = $this->session->userdata('email');
    $get_reg_no = $this->Add_phd_registration_model->get_registration_no_by_email($email);
    $get_reg_details = $this->Add_phd_registration_model->get_registration_detail_by_email($email);
    $gate_sub_code = trim($this->input->post('gate_sub_code'));
    $programme_apply_for = trim($this->input->post('programme_apply_for'));
    $prog_elligibilty = trim($this->input->post('prog_elligibilty'));
    $Work_Experince_yes_no = trim($this->input->post('Work_Experince_yes_no'));
    $ming_non_m_yes_no = trim($this->input->post('ming_non_m_yes_no'));
    $course = trim($this->input->post('course'));
    $p_elig_desc = $this->Add_phd_registration_model->get_degree_desc_by_program_id($prog_elligibilty);
  }

  public function get_apply_post()
  {
    $email = $this->session->userdata('email');
    $get_reg_no = $this->Add_phd_registration_model->get_registration_no_by_email($email);
    $get_reg_details = $this->Add_phd_registration_model->get_registration_detail_by_email($email);
    // mdn($get_reg_details);
    if (empty($get_reg_details)) {
      $this->session->set_flashdata('error', 'Details unable to get for this registration internal error!');
      $data['val'] = "H";
      $this->Adm_phd_header($data);
      $this->load->view('admission/phd/adm_phd_apply_post');
      $this->Adm_phd_footer();
    }

   
    $programme_apply_for = trim($this->input->post('programme_apply_for'));
    $prog_elligibilty = trim($this->input->post('prog_elligibilty'));
    $dept= trim($this->input->post('dept'));
    $phd_in= trim($this->input->post('phd_in')); 


    $data = array(
      'program_id' => $programme_apply_for,
      'degree_code' => $prog_elligibilty,
    );

    $cond = array(
      'registration_no' => $get_reg_no,
      'program_id' => $programme_apply_for,
    );

    $val_apply = $this->Adm_phd_application_model->already_applied($cond);
    $appl_program = $this->Adm_phd_personal_details_model->get_Adm_phd_reg_appl_program($get_reg_no);
    // echo $this->db->last_query();
    // exit;

    if ($val_apply == 'ok') {
      $this->session->set_flashdata('error', 'You have already applied the programme!');
      redirect('admission/phd/Adm_phd_user_dashboard/apply_post');
      exit;
    }
    if (count($appl_program) >= 10) {
      $this->session->set_flashdata('error', 'You cannot applied more than ten programme!');
      redirect('admission/phd/Adm_phd_user_dashboard/apply_post');
      exit;
    }
    $appl_program = $this->Adm_phd_personal_details_model->get_Adm_phd_reg_appl_program($get_reg_no);
    $datat['candidate_type'] = $this->Add_phd_registration_model->get_candidate_type_by_email($email);
    
    $sub_math_12th = $this->Add_phd_registration_model->sub_math_12th($programme_apply_for);
    $elligibilty_y_n = $this->Add_phd_registration_model->get_mining_non_mining($data);
    $p_elig_desc = $this->Add_phd_registration_model->get_degree_desc_by_program_id($prog_elligibilty);
    // $gate_paper_desc = $this->Add_phd_registration_model->get_paper_desc_by_p_code($gate_sub_code);  // mdn commented
    $p_apply_f_desc = $this->Add_phd_registration_model->get_program_desc_by_program_id($programme_apply_for);
    $department = $this->Add_phd_registration_model->get_department_by_program_id($programme_apply_for);
    $candidate_type = $this->Add_phd_registration_model->get_candidate_type_by_email($email);
    $dept_id = $department[0]->dept_id;
    $dept_desc = $department[0]->program_desc;
    $application_type = $get_reg_details[0]->appl_type;
    // $cfti_flag=$get_reg_details[0]->cfti_flag;

   
    if (!empty($elligibilty_y_n)) {
      if ($elligibilty_y_n == 'Y') {
        $msg = 'Yes';
      } else {
        $msg = 'No';
      }
    }
    $category = $get_reg_details[0]->category;
    $gender = $get_reg_details[0]->gender;
    $pwd = $get_reg_details[0]->pwd;

    if ($category == 'General' || $category == 'OBC' ||  $category == 'EWS') {
      $application_fee = 2;
      //  $application_fee=500;

    }

    if ($category == 'SC' || $category == 'ST' ||  $pwd == 'Y' || $gender == 'Female') {
      // $application_fee=800;
      $application_fee = 1;
    }

    if ($candidate_type == 'Sponsored Candidates') {
      // $application_fee=2000;
      $application_fee = 4;
    }


    $this->form_validation->set_rules('programme_apply_for', 'Programme applying for', 'required');
    $this->form_validation->set_rules('prog_elligibilty', 'Programme Elligibilty', 'required');
    $this->form_validation->set_rules('dept', 'Department', 'required');
    $this->form_validation->set_rules('phd_in', 'phd In', 'required');
    if ($this->form_validation->run() == true) 
    {
     

      $values = array(
        'registration_no' => $get_reg_details[0]->registration_no,
        'appl_type' => $get_reg_details[0]->appl_type,
        'first_name' => $get_reg_details[0]->first_name,
        'middle_name' => $get_reg_details[0]->middle_name,
        'last_name' => $get_reg_details[0]->last_name,
        'category' => $get_reg_details[0]->category,
        'pwd' => $get_reg_details[0]->pwd,
        'mobile' => $get_reg_details[0]->mobile,
        'email' => $get_reg_details[0]->email,
        'dob' => $get_reg_details[0]->dob,
        'gender' => $get_reg_details[0]->gender,
        'color_blind' => $get_reg_details[0]->color_blind,
        'created_by' => $email,
      );
     
      if (empty($non_ming_work_exp)) 
      {
        $non_ming_work_exp = 'N';
      }
      
      $extreg = substr($get_reg_details[0]->registration_no, 8);
      $value_apl_prog = array(
        'registration_no' => $get_reg_details[0]->registration_no,
        'program_id' => $programme_apply_for,
        'program_desc' => $p_apply_f_desc,
        'dept_id' => $dept,
        'degree_id' => $prog_elligibilty,
        'phd_in' => $phd_in,
        'status' => 'Y',
        'application_no' => strtoupper($programme_apply_for) . $extreg,
        'fee_amount' => $application_fee,
        'created_by' => $email,
      );

      $values1 = array(
        'registration_no' => $get_reg_no,
        'created_by' => $email,
      );

      $application = strtoupper($programme_apply_for) .$extreg;
      $ok1 = $this->Adm_phd_application_model->insert_application_details($values);
      $ok2 = $this->Adm_phd_application_model->insert_application_programme($value_apl_prog);
      // echo "<pre>";
      // print_r($value_apl_prog);
      // echo $this->db->last_query();
      // exit;
      $ok3=$this->Adm_phd_application_model->insert_phd_tab($values1);

      if ($ok1 == 1 && $ok2 == 1) {
        $this->session->set_flashdata('apply_success', 'You succesfully added' . $p_apply_f_desc);
        redirect('admission/phd/Adm_phd_user_dashboard/apply_post');
      } 
      else
      {
        $this->session->set_flashdata('error', 'There is error while saving data');
        redirect('admission/phd/Adm_phd_user_dashboard/apply_post');
      }
    } 
    else 
    {
      $viewdata['name'] = $this->session->userdata('name');
      $email = $this->session->userdata('email');
      $data['gate_paper_code'] = $this->Add_phd_registration_model->gate_paper_code();
      $data['btech_paper'] = $this->Add_phd_registration_model->get_programme_list_of_btech();
      $data['candidate_type'] = $this->Add_phd_registration_model->get_candidate_type_by_email($email);
      $data['val'] = "H";
      $this->Adm_phd_header($data);
      $this->load->view('admission/phd/adm_phd_apply_post');
      $this->Adm_phd_footer();
    }
  }


  public function get_program_elligibilty()
  {

    $this->load->model('admission/phd/Add_phd_registration_model');
    $programme_apply_for = $this->input->post('programme_apply_for');
    $data['prog'] = $this->Add_phd_registration_model->program_phd($programme_apply_for);
    $data['elligibilty'] = $this->Add_phd_registration_model->program_elligibilty_by_programe($programme_apply_for);
    echo json_encode($data);
  }



}
?>


